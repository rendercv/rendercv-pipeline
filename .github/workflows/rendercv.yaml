name: Render a CV

on:
  push:
    branches:
      - main
  workflow_call: # to make the workflow triggerable from other workflows (release.yaml)

permissions:
  contents: write

jobs:
  rendercv:
    name: RenderCV
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install RenderCV
        run: |
          pip install -r requirements.txt
      - name: Install pdflatex with biber
        run: |
          sudo apt-get install texlive-latex-base texlive-latex-extra texlive-latex-recommended texlive-bibtex-extra texlive-fonts-extra biber -y
      - name: Install PDFtk
        run: |
          sudo apt-get install pdftk -y
      - name: Create docs folder
        run: mkdir -p docs      
      - name: Build CV
        run: |
          cd src
          cv_file=$(find .  -maxdepth 1 -type f -name "*_CV.yaml" | head -n 1)
          if [ -z "$cv_file" ]; then
            echo "No RenderCV file found!"
            exit 1
          fi
          cd ..
          python src/parsebib.py
          python src/pubmerger.py
          rendercv render src/$cv_file --pdf-path ${cv_file%.yaml}.pdf --markdown-path README.md --latex-path ${cv_file%.yaml}.tex --html-path ${cv_file%.yaml}.html --dont-generate-png
          python src/genmd.py
          pdflatex Fabio_Calefato_Publications
          biber Fabio_Calefato_Publications
          pdflatex Fabio_Calefato_Publications
          pdflatex Fabio_Calefato_Publications
          cd application_letters
          pdflatex -job-name=hpi hpi.tex 
          pdftk hpi.pdf ../${cv_file%.yaml}.pdf ../Fabio_Calefato_Publications.pdf Certificates/phd_certificate-ita.pdf Certificates/msc_certificate-ita.pdf cat output temp.pdf
          python ../src/pdfnumbering.py temp.pdf Fabio_Calefato_Application_hpi.pdf 
          rm temp.pdf
          cd ..
      - name: Upload rendercv_output as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: RenderCV Output
          path: rendercv_output
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          base: HEAD
          filters: |
            cv:
              - '*.tex'
              - '*.html'
              - '*.pdf'
              - '*.md'
              - 'docs/*.md'
              - 'application_letters/*.pdf'
      - name: Push the changes
        if: steps.changes.outputs.cv == 'true'
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git add -A
          git commit -m "render the latest CV"
          git push origin HEAD:main
